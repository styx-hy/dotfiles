syntax on

if has('gui_macvim')
	let $GOPATH = expand("~/p/iku")
	let $GOROOT = expand("~/p/go")
	let $PATH .= ':/Users/styx/p/go/bin:/Users/styx/p/iku/bin'
endif

set backupdir=~/.saves,./.backup,.
set directory=~/.saves,./.backup,.

set rtp+=$GOROOT/misc/vim

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on
hi Search guibg=LightBlue
set hlsearch
set nu
set pastetoggle=<F2>
set incsearch
set autochdir
set tags=tags; " the semicolon here allows vim to search upward directory for tag file

" Tell vim to remember certain things when we exit
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
" set viminfo='10,\"100,:20,%,n~/.viminfo

" See neovim/neovim#3469
if has('nvim')
  " Remember things between sessions
  "
  " '20  - remember marks for 20 previous files
  " <50 - save 50 lines for each register
  " :20  - remember 20 items in command-line history
  " %    - remember the buffer list (if vim started without a file arg)
  set shada='20,<50,:20,%,n~/.nvim/_nviminfo
else
  " Remember things between sessions
  "
  " '20  - remember marks for 20 previous files
  " \"50 - save 50 lines for each register
  " :20  - remember 20 items in command-line history
  " %    - remember the buffer list (if vim started without a file arg)
  " n    - set name of viminfo file
  set viminfo='20,\"50,:20,%,n~/.vim/_viminfo
endif

function! ResCur()
	if line("'\"") <= line("$")
		normal! g`"
		return 1
	endif
endfunction

augroup resCur
	autocmd!
	autocmd BufWinEnter * call ResCur()
augroup END

set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" vim-go
Plugin 'fatih/vim-go'
let g:go_fmt_command = expand("goimports")
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

" vim-powerline settings
Plugin 'Lokaltog/vim-powerline'
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
let g:EasyMotion_smartcase = 1

" ag.vim
Plugin 'rking/ag.vim'
nmap <F3> :Ag<space><cword>

" NERD Commenter
Plugin 'scrooloose/nerdcommenter'
filetype plugin on
let g:mapleader=','
"let g:NERDCustomDelimiters = { 'c' : { 'left': '/* ', 'right': ' */', 'leftAlt': '// ' }}
let g:NERDSpaceDelims = 1

" YouCompleteMe
Plugin 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_enable_diagnostic_signs = 0
let g:ycm_enable_diagnostic_highlighting = 0

" fugitive
" Plugin 'tpope/vim-fugitive'

" ctrlp-cmatcher
Plugin 'JazzCore/ctrlp-cmatcher'

"ctrlp
Plugin 'kien/ctrlp.vim'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
" let g:ctrlp_cmd = 'CtrlPMRU'
let g:ctrlp_match_func  = {'match' : 'matcher#cmatch'}
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_max_height = 10			" maxiumum height of match window
let g:ctrlp_switch_buffer = 'et'	" jump to a file if it's open already
let g:ctrlp_mruf_max=450 			" number of recently opened files
let g:ctrlp_max_files=0  			" do not limit the number of searchable files
" let g:ctrlp_use_caching = 1
" let g:ctrlp_clear_cache_on_exit = 0
" let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'
" When using globpath()
let g:ctrlp_custom_ignore = {
			\ 'dir':  '\v[\/]\.(git|hg|svn)$',
			\ 'file': '\v\.(exe|so|dll|o|ko)$',
			\ }
nmap <c-b> :CtrlPBuffer<ENTER>

let g:ctrlp_buftag_types = {
			\ 'go'     	   : '--language-force=go --golang-types=ftv',
			\ 'coffee'     : '--language-force=coffee --coffee-types=cmfvf',
			\ 'markdown'   : '--language-force=markdown --markdown-types=hik',
			\ 'objc'       : '--language-force=objc --objc-types=mpci',
			\ 'rc'         : '--language-force=rust --rust-types=fTm'
			\ }

func! MyCtrlPTag()
	let g:ctrlp_prompt_mappings = {
				\ 'AcceptSelection("e")': ['<cr>', '<2-LeftMouse>'],
				\ 'AcceptSelection("t")': ['<c-t>'],
				\ }
	CtrlPBufTag
endfunc
command! MyCtrlPTag call MyCtrlPTag()

" command-t
Plugin 'wincent/Command-T'
let g:CommandTMaxHeight = 10
nnoremap <silent> <Leader>s :CommandTTag<CR>

" GitGutter
Plugin 'airblade/vim-gitgutter'
highlight clear SignColumn
highlight GitGutterAdd ctermfg=green
highlight GitGutterChange ctermfg=yellow
highlight GitGutterDelete ctermfg=red
highlight GitGutterChangeDelete ctermfg=yellow

" Solarized
Plugin 'altercation/vim-colors-solarized'

" mololkai
Plugin 'tomasr/molokai'
let g:molokai_original = 1
let g:rehash256 = 1

" vim-easymotion
Plugin 'Lokaltog/vim-easymotion'
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
let g:EasyMotion_smartcase = 1

" vim-surround
Plugin 'tpope/vim-surround'

" vim-speeddating
Plugin 'tpope/vim-speeddating'

" vim-snippets
Plugin 'honza/vim-snippets'

" Track the engine.
" Plugin 'SirVer/ultisnips'

" neocomplete
Plugin 'Shougo/neocomplete'
let g:neocomplete#enable_at_startup = 1

" Linux kernel code style
Plugin 'vivien/vim-linux-coding-style'

" LaTeX-BoX
Plugin 'LaTeX-Box-Team/LaTeX-Box'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<S-Tab>"
" let g:UltiSnipsJumpForwardTrigger="<c-b>"
" let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" Settings of MacVim
set guifont=PragmataPro:h14
if has('gui_macvim')
	set background=light
	" colorscheme solarized " must be set after vundle#end()
	set guioptions-=m  "no menu
	set guioptions-=T  "no toolbar
	set guioptions-=l
	set guioptions-=L
	set guioptions-=r  "no scrollbar
	set guioptions-=R

	let macvim_skip_colorscheme=1
	let g:molokai_original=1
	" colorscheme molokai
	set background=dark
	colorscheme solarized
	highlight SignColumn guibg=#272822

	" Open goto symbol on current buffer
	nmap <D-r> :MyCtrlPTag<cr>
	imap <D-r> <esc>:MyCtrlPTag<cr>

	" Open goto symbol on all buffers
	nmap <D-R> :CtrlPBufTagAll<cr>
	imap <D-R> <esc>:CtrlPBufTagAll<cr>
endif

set tw=79 " textwidth 79, use `gq` to auto wrap selection
set formatoptions+=t

let g:tex_flavor='latex'

" Key bindings
nnoremap <C-J> ciW<CR><Esc>:if match( @", "^\\s*$") < 0<Bar>exec "norm P-$diw+"<Bar>endif<CR>
nnoremap dc bde
noremap % v%
nmap <silent> <leader>k :bp\|bd #<CR>
imap jj <Esc>
nnoremap <leader><leader>i :CtrlPTag<CR>
